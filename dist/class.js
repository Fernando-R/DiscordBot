// Generated by CoffeeScript 2.4.1
(function() {
  var Class, classKeywords,
    indexOf = [].indexOf;

  classKeywords = ['extended', 'included', 'implements', 'constructor'];

  Class = class Class {
    extended(...objs) {
      var i, key, len, obj, ref, value;
      for (i = 0, len = objs.length; i < len; i++) {
        obj = objs[i];
        if (typeof obj === 'function' && Boolean(obj.name)) {
          obj = obj.prototype;
        }
//when key not in moduleKeywords
        for (key in obj) {
          value = obj[key];
          // Assign properties to the prototype
          if (indexOf.call(classKeywords, key) < 0) {
            //console.log 'implementing', value.toString(), 'as', key
            this.prototype[key] = value;
          }
        }
        if ((ref = obj.included) != null) {
          ref.apply(this);
        }
      }
      return this;
    }

    static property(prop, desc) {
      return Object.defineProperty(this.prototype, prop, desc);
    }

  };

}).call(this);
